// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DSdb))]
    [Migration("20210404091146_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Delivery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Courier_ID_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<double>("KmPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("Courier_ID_FK");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("DAL.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdressDestination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdressOrigin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int?>("Courier_ID_FK")
                        .HasColumnType("int");

                    b.Property<int>("Customer_ID_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delivery_ID_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status_ID_FK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Courier_ID_FK");

                    b.HasIndex("Customer_ID_FK");

                    b.HasIndex("Delivery_ID_FK");

                    b.HasIndex("Status_ID_FK");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DAL.OrderItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Order_ID_FK")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfCargo_ID_FK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Order_ID_FK");

                    b.HasIndex("TypeOfCargo_ID_FK");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("DAL.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("DAL.TypeOfCargo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Coefficient")
                        .HasColumnType("float");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TypeOfCargo");
                });

            modelBuilder.Entity("DAL.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("DAL.Courier", b =>
                {
                    b.HasBaseType("DAL.User");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasDiscriminator().HasValue("Courier");
                });

            modelBuilder.Entity("DAL.Customer", b =>
                {
                    b.HasBaseType("DAL.User");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("DAL.Delivery", b =>
                {
                    b.HasOne("DAL.Courier", "Courier")
                        .WithMany("Delivery")
                        .HasForeignKey("Courier_ID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("DAL.Order", b =>
                {
                    b.HasOne("DAL.Courier", "Courier")
                        .WithMany("Order")
                        .HasForeignKey("Courier_ID_FK");

                    b.HasOne("DAL.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("Customer_ID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Delivery", "Delivery")
                        .WithMany("Order")
                        .HasForeignKey("Delivery_ID_FK");

                    b.HasOne("DAL.Status", "Status")
                        .WithMany("Order")
                        .HasForeignKey("Status_ID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");

                    b.Navigation("Customer");

                    b.Navigation("Delivery");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DAL.OrderItem", b =>
                {
                    b.HasOne("DAL.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("Order_ID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.TypeOfCargo", "TypeOfCargo")
                        .WithMany("OrderItem")
                        .HasForeignKey("TypeOfCargo_ID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("TypeOfCargo");
                });

            modelBuilder.Entity("DAL.Delivery", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("DAL.Order", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("DAL.Status", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("DAL.TypeOfCargo", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("DAL.Courier", b =>
                {
                    b.Navigation("Delivery");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DAL.Customer", b =>
                {
                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
